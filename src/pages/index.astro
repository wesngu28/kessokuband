---
import Image from "astro/components/Image.astro";
import Layout from "../layouts/Layout.astro";

const music = [
  ["Seishun Complex", "seisyun complex"],
  ["Hitoribocchi Tokyo", "hitoribocchi tokyo"],
  ["Distortion!!", "Distortion!!"],
  ["Himitsu Kichi", "Secret base"],
  ["Guitar to Kodoku to Aoihoshi", "Guitar, Loneliness, and Blue Planet"],
  ["Love Song ga Utaenai", "I can't sing a love song"],
  ["Ano Band", "That band"],
  ["Karakara", "Karakara"],
  ["Chiisana Umi", "The Little Sea"],
  ["Nani ga Warui", "What is wrong with"],
  ["Wasurete Yaranai", "Never forget"],
  ["Seiza ni Naretara", "If I could be a constellation"],
  ["Flashbacker", "Flashbacker"],
  [
    "Korogaru Iwa, Kimi ni Asa ga Furu",
    "Rockn' Roll, Morning Light Falls on You",
  ],
];

const members = [
  {
    name: "Hitori Gotoh",
    secondary: "Gotoh",
    role: "Lead Guitarist, Lyricist",
    seiyu: "Yoshino Aoyama",
    description:
      'An extremely timid and introverted first-year student in high school. She is in charge of the lead guitar of Kessoku Band. She dreams of playing in a band that might let even an introverted girl shine and starts playing the guitar. Although her skill is the real deal, she can\'t show it well in a band or public. She has a habit of saying "Ahh" before she says something.',
    image: "Hitori.webp",
    color: "ff00ff",
  },
  {
    name: "Nijika Ijichi",
    secondary: "Ijichi",
    role: "Drummer, Organizer",
    seiyu: "Sayumi Suzushiro",
    description:
      'An energetic and cheerful second-year high school student. She is the drummer of Kessoku Band. The organizer of her band who takes care of Hitori was already joined Kessoku Band. She has an older sister, Seika, who is the manager of the live house "STARRY" and has a special feeling for the live house.',
    image: "Nijika.webp",
    color: "ffff00",
  },
  {
    name: "Ryou Yamada",
    secondary: "Yamada",
    role: "Bassist, Backing Vocalist",
    seiyu: "Saku Mizuno",
    description:
      "A cool and solitary second-year high school student. She is the bassist of Kessoku Band and Nijika's best friend. Her hobbies are out of the ordinary, and she rejoices when called a weirdo. She lives with a wealthy family but never has any money because she spends it all on instruments. She occasionally eats weeds to get rid of her hunger.",
    image:
      "https://static.wikia.nocookie.net/bocchi-the-rock/images/4/4a/Ryo_Yamada_Character_Design_2.png",
    color: "1D4ED8",
  },
  {
    name: "Ikuyo Kita",
    secondary: "Kita",
    role: "Vocalist, Guitarist",
    seiyu: "Ikumi Hasegawa",
    description:
      "A bright and popular first year of high school. She is in charge of the guitar and vocals of Kessoku Band. She is a cheerful character who likes to interact with people and can talk to her with a smile without hesitation, even when she meets her for the first time. She looks up to Ryo, and her feelings can go too far. She often takes photos and uploads to Isosta.",
    image:
      "https://static.wikia.nocookie.net/bocchi-the-rock/images/a/a8/Ikuyo_Kita_Character_Design_2.png",
    color: "ff250e",
  },
];

const support = [
  {
    url: "https://open.spotify.com/artist/2nvl0N9GwyX69RRBMEZ4OD",
    img: "Spotify",
    alt: "Spotify",
  },
  {
    url: "https://music.apple.com/us/artist/kessoku-band/1646020674",
    img: "AppleMusic",
    alt: "Apple Music",
  },
  {
    url: "https://music.youtube.com/channel/UC6IhDHJbJUoRJGUPnlh5GRQ",
    img: "YoutubeMusic",
    alt: "Youtube Music",
  },
  {
    url: "https://music.amazon.com/artists/B0BFWXL2XZ/kessoku-band",
    img: "AmazonMusic",
    alt: "Amazon Music",
  },
];
---

<Layout title="Kessoku Band">
  <main class="container flex justify-center items-center flex-col max-w-7xl">
    <section
      id="maincontent"
      class="min-h-screen flex flex-col justify-center items-center"
    >
      <header
        class="fixed top-0 bg-gray-900 w-screen flex items-center justify-center z-50"
      >
        <nav>
          <ul class="p-4 flex items-center">
            <li><a href="#members" class="mr-4">Members</a></li>
            <li><a href="#music" class="mr-4">Music</a></li>
            <li><a href="#support">Support</a></li>
          </ul>
        </nav>
      </header>
      <Image
        alt="Kessoku Band Logo"
        width={315}
        height={282}
        class="pt-16"
        src="Band.webp"
      />
      <div class="text-blue-700 flex-grow flex items-center justify-center">
        <div class="flex-grow grid grid-cols-3 max-w-4xl mb-24 p-4">
          <Image
            width={576}
            height={323}
            alt="Kessoku Band Banner"
            class="col-span-2"
            src="Bands.webp"
          />
          <Image
            width={288}
            height={323}
            alt="Kessoku Group Photo on Instruments"
            class="object-cover aspect-square h-full"
            src="Pic3.webp"
          />
          <Image
            width={288}
            height={162}
            alt="Kessoku Promotional Photo"
            class="object-cover w-auto h-auto"
            src="Pic1.webp"
          />
          <Image
            width={288}
            height={162}
            alt="Kessoku on Instruments"
            class="object-cover w-full h-auto"
            src="Pic4.webp"
          />
          <Image
            width={288}
            height={162}
            alt="Kessoku Group Kita Selfie"
            class="object-cover w-full h-auto"
            src="Pic2.webp"
          />
        </div>
      </div>
    </section>

    <section
      id="members"
      class="m-auto min-h-screen flex flex-col max-w-7xl w-full justify-center items-center"
    >
      <div class="flex w-full justify-center p-4">
        {
          members.map((member) => (
            <div>
              <Image
                loading="lazy"
                width={312}
                height={386}
                alt={member.secondary}
                data-name={member.secondary}
                class="mem hover:scale-105 hover:z-50"
                src={`${member.secondary}.webp`}
              />
            </div>
          ))
        }
      </div>
      {
        members.map((member) => (
          <div class="flex-col sm:flex-row gap-0 sm:gap-16 membercard hidden items-center justify-center">
            <Image
              loading="lazy"
              alt={member.name}
              width={152}
              height={373}
              class="hidden sm:block"
              src={member.image}
            />
            <div class="flex flex-col w-96 justify-between items-center mt-16 mb-16">
              <div>
                <h2 style={`color: #${member.color};`}>{member.name}</h2>
                <p>Role: {member.role}</p>
                <p>Seiyu: {member.seiyu}</p>
              </div>
              <p class="text-sm h-[224px] mt-16 p-6">
                {member.description}
              </p>
            </div>
          </div>
        ))
      }
    </section>

    <section
      id="music"
      class="min-h-screen flex flex-col justify-center items-center"
    >
      <div class="w-auto sm:w-[36rem]">
        <audio
          data-testid="main audio"
          preload="none"
          src="Guitar, Loneliness and Blue Planet.mp3"></audio>
        <div
          class="mb-8 sm:flex-row flex-col flex items-center gap-4 justify-center"
        >
					<div class="flex flex-col sm:flex-row gap-4">
						<Image
            loading="lazy"
            alt="Kessoku Band Album"
            width={128}
            height={114}
            src="KessokuCover.webp"
            class="w-32"
          />
          <div class="flex flex-row sm:flex-col gap-2">
            <a
              href="https://open.spotify.com/album/5ZGzGGNAB6U7QlKpdaMu0d?si=sAHuLOXfT_u7d-kTfb0vHg"
            >
              <img class="w-8" src="Spotify.svg" />
            </a>
            <a
              href="https://music.youtube.com/playlist?list=OLAK5uy_le0yxWXsv9FFR34JFe6BdkMFTeVWYcUpo"
            >
              <img class="w-8" src="YoutubeMusic.svg" />
            </a>
            <a
              href="https://music.apple.com/us/album/%E7%B5%90%E6%9D%9F%E3%83%90%E3%83%B3%E3%83%89/1657318546"
            >
              <img class="w-8" src="AppleMusic.svg" />
            </a>
          </div>
					</div>
          <div class="flex gap-4 items-center">
            <button data-testid="mainaudio" class="audioplay">
              <Image
                loading="lazy"
                alt="Play"
                width={48}
                height={48}
                src="Play.png"
              />
            </button>
            <div>
              <h2
                class="currentSong text-xl tracking-tighter font-semibold w-max max-w-[225px] sm:max-w-xs"
              >
                Guitar to Kodoku to Aoihoshi
              </h2>
              <p>Kessoku Band</p>
            </div>
          </div>
        </div>
      </div>
      <div class="w-max">
        {
          music.map((song) => (
            <div data-song-url={song[1]} data-song={song[0]} class="song flex">
              <button data-testid={song[0]}>
                <Image
                  loading="lazy"
                  alt="Play"
                  width={32}
                  height={24}
                  class="mr-2"
                  src="Play.png"
                />
              </button>
              <p class="max-w-[260px] sm:max-w-xs h-8">{song[0]}</p>
            </div>
          ))
        }
      </div>
    </section>

    <section
      id="support"
      class="min-h-screen flex flex-col justify-center items-center"
    >
      <h2 class="mb-8">See us live at Starry</h2>

      <Image
        loading="lazy"
        alt="Starry"
        width={320}
        height={223}
        class="rounded-md mb-16"
        src="Starry.webp"
      />
      <div class="grid grid-cols-2" >
        <a href="https://www.youtube.com/watch?v=p010N38zFrA" target="_blank">
          <video autoplay="" muted="" loop="" width={320} height={223}>
            <source src="Perf1.mp4" type="video/mp4" />
            Your browser does not support the video tag.
          </video>
        </a>
        <a href="https://www.youtube.com/watch?v=5tc14WHUoMw" target="_blank">
          <video autoplay="" muted="" loop="" width={320} height={223}>
            <source src="Perf2.mp4" type="video/mp4" />
            Your browser does not support the video tag.
          </video>
        </a>
      </div>
      <a class="mb-16" href="https://www.youtube.com/watch?v=fJh5UeiULZs" target="_blank">
        <video autoplay="" muted="" loop="" width={320} height={223}>
          <source src="Perf3.mp4" type="video/mp4" />
          Your browser does not support the video tag.
        </video>
      </a>
      <h2 class="mb-8">Support Kessoku Band</h2>
      <div class="flex gap-8 justify-center">
        {
          support.map((platform) => (
            <a class="flex" href={platform.url}>
              <Image
                loading="lazy"
                alt={platform.alt}
                width={64}
                height={64}
                class="w-16"
                src={`${platform.img}.svg`}
              />
            </a>
          ))
        }
      </div>
    </section>

    <footer class="p-4 mb-4">
      All rights reserved to © 2022 CloverWorks Studios & Aniplex
    </footer>
  </main>
</Layout>

<script>
  const elements = document.querySelectorAll("#maincontent ~ *");

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.remove("hide");
          entry.target.classList.add("show");
        } else {
          entry.target.classList.remove("show");
          entry.target.classList.add("hide");
        }
      });
    },
    {
      threshold: 0.5,
    }
  );

  elements.forEach((element) => observer.observe(element));

  const images: NodeListOf<HTMLImageElement> =
    document.querySelectorAll(".mem");
  const members = document.querySelectorAll(".membercard");
  const songs = document.querySelectorAll(".song");
  const media: HTMLButtonElement | null = document.querySelector(".audioplay");
  const audio: HTMLAudioElement | null = document.querySelector("audio");

  document.addEventListener("DOMContentLoaded", () => {
    const random = Math.floor(Math.random() * members.length);
    members[random].classList.remove("hidden");
    members[random].classList.add("flex");
  });

  images.forEach((img) => {
    img.addEventListener("mouseover", () => {
      const mesrc = img.src;
      images.forEach((img) => {
        img.classList.add("opacity-100");
        if (img.src !== mesrc) {
          img.classList.remove("opacity-100");
          img.classList.add("opacity-50");
        } else {
          img.classList.remove("opacity-50");
        }
      });
      members.forEach((member) => {
        let name = member.querySelector("h2")!;
        if (name.textContent!.includes(img.getAttribute("data-name")!)) {
          member.classList.remove("hidden");
          member.classList.add("animate-slideshow");
          member.classList.add("flex");
        } else {
          member.classList.remove("flex");
          member.classList.remove("opacity-100");
          member.classList.remove("duration-1000");
          member.classList.remove("transition-opacity");
          member.classList.add("hidden");
        }
      });
    });
    img.addEventListener("mouseleave", () => {
      images.forEach((img) => {
        img.classList.add("opacity-100");
      });
    });
  });

  if (media && audio) {
    const play: HTMLImageElement | null = media.querySelector("img");
    media.addEventListener("click", () => {
      if (play) {
        if (play.src.includes("Play.png")) {
          audio.volume = 0.1;
          audio.play();
          play.src = "Pause.png";
          play.alt = "Pause";
        } else {
          audio.pause();
          play.src = "Play.png";
          play.alt = "Play";
        }
      }
    });
    songs.forEach((song) => {
      const button = song.querySelector("button");
      if (button) {
        button.addEventListener("click", () => {
          const currentSong = document.querySelector(".currentSong")!;
          currentSong.textContent = song.getAttribute("data-song");
          audio.src = `${song.getAttribute("data-song-url")}.mp3`;
          audio.pause();
          if (play) {
            play.src = "Play.png";
            play.alt = "Pause";
          }
        });
      }
    });
  }
</script>

<style>
  .hide {
    opacity: 0;
    transition: all 1s;
  }
  .show {
    opacity: 1;
    transition: all 1s;
  }
  @media (prefers-reduced-motion) {
    .hide {
      transition: none;
    }
  }
</style>